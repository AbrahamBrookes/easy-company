name: Laravel

on:
  workflow_dispatch:

jobs:
  PHPunit:

    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.2.4'
    - uses: actions/checkout@v3
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --ignore-platform-reqs
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Link Storage
      run: php artisan storage:link
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Migrate Database
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan migrate
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit

  deploy:
    runs-on: ubuntu-latest
    needs: PHPunit
    if: success()
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y php-cli php-mbstring php-xml php-zip unzip nodejs npm
        npm install -g npm
        composer install
        npm install
        npm run prod

    - name: Deploy to server
      uses: easingthemes/ssh-deploy@v2.1.6
      env:
        SSH_PRIVATE_KEY: ${{ secrets.BDEV_GITHUB_ACTIONS_PRIV }}
        ARGS: "-avc -i"
        SOURCE: "."
        REMOTE_HOST: ${{ secrets.DEPLOY_HOST }}
        REMOTE_USER: ${{ secrets.DEPLOY_USER }}
        TARGET: ${{ secrets.DEPLOY_PATH }}
        EXCLUDE: "storage/*, .git*, .github*, .storybook, deployment, docker, *node_modules, tests, *.example, *.env, *.env.example, docker-compose.yml, phpunit.xml"
        SCRIPT_BEFORE: |
          whoami
          ls -al
        SCRIPT_AFTER: |
          whoami
          ls -al
          echo $RSYNC_STDOUT
    - name: Post Deployment Serverside Tasks
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.BDEV_GITHUB_ACTIONS_PRIV }}
        script: |
          cd ${{ secrets.DEPLOY_PATH }}
          php artisan down
          php artisan migrate --force
          php artisan config:cache
          php artisan up

